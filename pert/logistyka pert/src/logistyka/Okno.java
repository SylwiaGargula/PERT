/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package logistyka;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import static oracle.jrockit.jfr.events.Bits.intValue;

/**
 *
 * @author Sylwia
 */

public class Okno extends javax.swing.JFrame {
    
double dyrektywny=0;
boolean licz=false;
double licznik;
int iloscZadan=0;
int iloscWierzcholkow;
int index=0;
double[][] czasy; 

double[] oczekiwanyCzas;
        double[] wariancja;
        double wynikZtablicy=0;

    /**
     * Creates new form Okno
     */
    public Okno() {
        super("Metoda PERT-Program Evaluation and Review Technique");
        initComponents();
        
        //PERT();
        
    }
    
public double PERT()
{
   
        for(int i=0; i<iloscWierzcholkow;i++)
        {
            oczekiwanyCzas[i]=(czasy[i][0]+4*czasy[i][1]+czasy[i][2])/6;
            System.out.println("Czas oczekiwany wynosi "+oczekiwanyCzas[i]);

            wariancja[i]=(Math.pow(czasy[i][2]-czasy[i][0],2))/36;
            System.out.println("Wariancja wynosi "+wariancja[i]);
        }

        double u=0;
        for(int i=0; i<iloscWierzcholkow;i++)
        {
            u+=oczekiwanyCzas[i];
        }
        System.out.println("u wynosi "+u);


        double sigmakwadrat=0;
        for(int i=0; i<iloscWierzcholkow;i++)
        {
            sigmakwadrat+=wariancja[i];
        }
        System.out.println("sigma kwadrat wynosi "+sigmakwadrat);
        double sigma=Math.sqrt(sigmakwadrat);
        System.out.println("sigma wynosi "+sigma);

       

double wzor=0;
        wzor=(dyrektywny-u)/sigma;


        System.out.println("Wzor "+wzor);



        File plik=new File("dystrybuanta.txt");
        try {
            Scanner odczyt = new Scanner(new File("dystrybuanta.txt"));

            double[][] dystrybuanta=new double[36][10];
            int licznik=0;
            while(odczyt.hasNextLine())
            {
                String text= odczyt.nextLine();
                String[] pom= text.split(" ");

                for(int i=0; i<10;i++)
                {
                    dystrybuanta[licznik][i]=Double.parseDouble(pom[i]);
                }
                licznik++;
            }

            int wiersz;
            int kolumna;
            double pomoc;
            pomoc=wzor*10;
            wiersz=(int)pomoc;
            pomoc-=wiersz;
           // if(pomoc>=5)
          //  {wiersz++;
         //   kolumna=0;
         //   }
                
            pomoc=pomoc*10;
            kolumna=(int)pomoc;
            System.out.println("wiersz "+wiersz+" kolumna "+kolumna);
            
            if(kolumna>0 && wiersz>0) {
                wynikZtablicy = dystrybuanta[wiersz][kolumna];
                System.out.println("Prawdopodobienstwo "+wynikZtablicy);
            }
else {
                if (kolumna < 0)
                    kolumna = kolumna * (-1);
                if (wiersz < 0)
                    wiersz = wiersz * (-1);
                System.out.println("wiersz " + wiersz + " kolumna " + kolumna);
                wynikZtablicy = (1 - dystrybuanta[wiersz+1][kolumna+1]) * 100;

                System.out.println("Prawdopodobienstwo " + wynikZtablicy);
               
            }
/*
            for(int i=0;i<36;i++)
            {
                for(int j=0;j<10;j++) {
                    System.out.print(dystrybuanta[i][j]);
                }
                System.out.println();

            }
            */
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

return wynikZtablicy;
    

}
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pesymistyczny = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        planowy = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        prawdopodobienstwo = new javax.swing.JTextField();
        ilosc = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Podaj ilość zdarzeń na ścieżce krytycznej");

        jLabel2.setText("Podaj czasy dla każdego zdarzenia");

        jLabel3.setText("Czas optymistyczny");

        jLabel4.setText("Czas prawdopodobny");

        jLabel5.setText("Czas pesymistyczny");

        pesymistyczny.setText("0");
        pesymistyczny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesymistycznyActionPerformed(evt);
            }
        });

        jLabel6.setText("Podaj planowy czas zakończenia");

        planowy.setText("0");
        planowy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planowyActionPerformed(evt);
            }
        });

        jLabel7.setText("Prawdopodobieństwo zakończenia planowo wynosi:");

        prawdopodobienstwo.setText("0");
        prawdopodobienstwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prawdopodobienstwoActionPerformed(evt);
            }
        });

        ilosc.setText("0");
        ilosc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iloscActionPerformed(evt);
            }
        });

        jLabel8.setText("%");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(50, 50, 50))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel5)))
                        .addComponent(pesymistyczny, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel1))
                            .addGap(49, 49, 49)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(planowy)
                                .addComponent(ilosc, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(186, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(prawdopodobienstwo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(238, 238, 238))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ilosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(planowy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jLabel2)
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pesymistyczny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jLabel4)
                .addGap(34, 34, 34)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prawdopodobienstwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(86, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 int k=0;
 
    private void pesymistycznyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesymistycznyActionPerformed
    String pomoc;
    pomoc=pesymistyczny.getText();
    
    String[] podzielone=pomoc.split(",");
    double[] pom=new double[podzielone.length+1];
    for(int i=0; i<podzielone.length;i++)
    pom[i]=Double.parseDouble(podzielone[i]);
    for (int i=0; i<3; i++)
    {
        //System.out.println(podzielone[i]);
    czasy[k][i]=pom[i];
    }
        k++;
        licznik++;
        
        if(licznik==iloscWierzcholkow)
        {//wynik
            double a=PERT();

        prawdopodobienstwo.setText(String.valueOf(a));
        pesymistyczny.setEnabled(false);
        }
            
        
       for(int i=0; i<iloscWierzcholkow; i++)
    {
        for(int j=0; j<3; j++)
                System.out.print(czasy[i][j]);
             } 
       System.out.println();
    }//GEN-LAST:event_pesymistycznyActionPerformed

    
    private void planowyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planowyActionPerformed
        // TODO add your handling code here:
   dyrektywny=Integer.parseInt(planowy.getText());
    planowy.setEnabled(false);
    
    }//GEN-LAST:event_planowyActionPerformed

    private void iloscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iloscActionPerformed
        // TODO add your handling code here:
        iloscZadan=Integer.parseInt(ilosc.getText());
        iloscWierzcholkow=iloscZadan;
       oczekiwanyCzas=new double[iloscWierzcholkow];
       wariancja=new double[iloscWierzcholkow];
        czasy=new double[iloscWierzcholkow][3];
        ilosc.setEnabled(false);
        //System.out.println(iloscZadan);

    }//GEN-LAST:event_iloscActionPerformed

    private void prawdopodobienstwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prawdopodobienstwoActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_prawdopodobienstwoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Okno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Okno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ilosc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField pesymistyczny;
    private javax.swing.JTextField planowy;
    private javax.swing.JTextField prawdopodobienstwo;
    // End of variables declaration//GEN-END:variables
}
